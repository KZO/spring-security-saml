description = "Spring Security SAML v2 library"

dependencies {
	compile "org.springframework.security:spring-security-core:$springSecurityVersion",
		"org.springframework.security:spring-security-config:$springSecurityVersion",
		"org.slf4j:slf4j-api:$slf4jVersion"	
	compile ("org.springframework.security:spring-security-web:$springSecurityVersion") {
		exclude group: "org.springframework", module: "spring-jdbc"
		exclude group: "org.springframework", module: "spring-tx"
	}
	compile ("org.opensaml:opensaml:2.6.1") {
		exclude group: "org.slf4j", module: "jcl-over-slf4j"
		exclude group: "org.slf4j", module: "log4j-over-slf4j"
		exclude group: "org.apache.xerces", module: "xml-apis"
		exclude group: "org.apache.xerces", module: "serializer"
	}
	provided "javax.servlet:servlet-api:2.5"
	runtime	"xml-apis:xml-apis:1.4.01"
	testCompile "org.slf4j:slf4j-log4j12:1.6.3",
		"org.easymock:easymock:2.4",
		"junit:junit:4.4",
		"commons-logging:commons-logging:1.1.1",
		"xmlunit:xmlunit:1.0"
	testCompile	("org.springframework:spring-test:$springVersion") {
		exclude group: "commons-logging", module: "commons-logging"
	}
}

apply plugin: 'maven-publish'
apply plugin: 'maven-publish-auth'

publishing {
	publications {
		mavenJava(MavenPublication) {
			pom.withXml {
				asNode().dependencies.'*'.findAll() {
					it.scope.text() == 'runtime' && project.configurations.provided.allDependencies.find { dep ->
						dep.name == it.artifactId.text()
					}
				}.each() {
					it.scope*.value = 'provided'
				}
			}

			pom.withXml {
				asNode().dependencies.'*'.findAll() {
					it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
						dep.name == it.artifactId.text()
					}
				}.each() {
					it.scope*.value = 'compile'
				}
			}

			from components.java

			artifact sourcesJar {
				classifier "sources"
			}
		}
	}
}

publishing {
	repositories {
		maven {
			name "kzoinnovations-releases"
			url "https://nexus.kzoinnovations.com/nexus/content/repositories/kzoinnovations-releases/"
		}
	}
}